# find the pair of adjacent elements that has the largest product and return that product.
def solution(inputArray):
    

    for i in range(len(inputArray)):
        for j in range(i+1,len(inputArray)):
            max=0
            max_product_pair =None
            product=inputArray[i]*inputArray[j]
            
            if product>max:
                max=product
                max_product_pair=(inputArray[i],inputArray[j])
    return (max_product_pair,max)
                
inputArray = [3, 6, -2, -5, 7, 3]  
print(f"{max_product_pair} produce largest product")      
print(solution(inputArray))

#######################################
def find_max_adjacent_product(input_array):
  """Finds the maximum product of two adjacent elements in a given array.

  Args:
      input_array (list): The list of integers to analyze.

  Returns:
      int: The maximum product of two adjacent elements.
  """

  if len(input_array) < 2:
    raise ValueError("Input array must contain at least two elements.")

  max_product = input_array[0] * input_array[1]  # Initialize with first two elements

  for i in range(1, len(input_array) - 1):
    product = input_array[i] * input_array[i + 1]
    max_product = max(max_product, product)

  return max_product

# Example usage (no input needed)
input_array = [3, 6, -2, -5, 7, 3]
max_product = find_max_adjacent_product(input_array)
print(f"The maximum product of adjacent elements is: {max_product}")

