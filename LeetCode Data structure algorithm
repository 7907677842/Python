{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyO5knKPWYvlAHzGKonfU2ag",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/bhimabasheer/Python/blob/main/LeetCode%20Data%20structure%20algorithm\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "id": "lBQIqgMc1y__",
        "outputId": "0d8e0ad6-f9d9-425d-e466-5439d76d01c8",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 211
        }
      },
      "outputs": [
        {
          "output_type": "error",
          "ename": "AttributeError",
          "evalue": "module 'pandas' has no attribute 'read'",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-2-0979543e664e>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mpandas\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mf\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mr'file.txt'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mg\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mDataFrame\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mg\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m   \u001b[0mcount\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mAttributeError\u001b[0m: module 'pandas' has no attribute 'read'"
          ]
        }
      ],
      "source": [
        "import pandas as pd\n",
        "f=pd.read(r'file.txt')\n",
        "g=pd.DataFrame(f)\n",
        "for i in g:\n",
        "  count(i)\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "LdZFk2WIsU1o"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "my_list = ['apple','cat']\n",
        "reversed_list = my_list[::-1]\n",
        "print('Original list:', my_list)\n",
        "print('Reversed list:', reversed_list)\n",
        "\n",
        "# Output:\n",
        "# Original list: ['apple', 'banana', 'cherry']\n",
        "# Reversed list: ['cherry', 'banana', 'apple']\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cwajkoS0XS0G",
        "outputId": "f6e6f0fc-7bec-4cd7-ff5d-710edeaa8a27"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Original list: ['apple', 'cat']\n",
            "Reversed list: ['cat', 'apple']\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "    # Finds the indices of two numbers in the input list that add up to the target sum.\n",
        "target = 9\n",
        "nums = [2, 15, 7, 7]\n",
        "output={}\n",
        "for i in range(len(nums)):\n",
        "  for j in range(i+1,len(nums)):\n",
        "        if nums[i]+nums[j]==target:\n",
        "             key=(i,j)\n",
        "             if key not in output:\n",
        "                 output[key]=(nums[i],nums[j])\n",
        "             #print(nums[i],nums[j])\n",
        "             #print(i,j)\n",
        "\n",
        "print(output)  #{(0, 2): (2, 7), (0, 3): (2, 7)}"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "uYmDiNr-sZf4",
        "outputId": "2dc6ee1d-f5e9-497a-e6f7-fdd6eaf7c5c9"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{(0, 2): (2, 7), (0, 3): (2, 7)}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Finds the indices of two numbers in the input list that add up to the target sum.\n",
        "target = 9\n",
        "nums = [2, 15, 7, 7]\n",
        "for i in range(len(nums)):\n",
        "  for j in range(1,len(nums)):\n",
        "        if nums[i]+nums[j]==target:\n",
        "             print({(i,j):(nums[i],nums[j])})\n",
        "             print(i,j)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5AH6RROlsmnr",
        "outputId": "a9e1c38e-a42b-4d02-8433-8015a9bd821b"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{(0, 2): (2, 7)}\n",
            "0 2\n",
            "{(0, 3): (2, 7)}\n",
            "0 3\n"
          ]
        }
      ]
    }
  ]
}