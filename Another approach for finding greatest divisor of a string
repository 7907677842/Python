# Another approach for finding greatest divisor of a string

class Solution:
    def gcdOfStrings(self, str1: str, str2: str) -> str:
        # Helper function to compute the Greatest Common Divisor (GCD) of two numbers
        def gcd(a: int, b: int) -> int:
            while b:
                a, b = b, a % b
            return a
        
        # Check if str1 + str2 is the same as str2 + str1
        if str1 + str2 != str2 + str1:
            return ""
        
        # Compute the GCD of the lengths of str1 and str2
        gcd_length = gcd(len(str1), len(str2))
        
        # The largest common divisor string is the substring of str1 up to gcd_length
        return str1[:gcd_length]

# Example usage:
str1 = "ABCABC"
str2 = "ABC"
solution = Solution()
print(solution.gcdOfStrings(str1, str2))  # Output: "ABC"
