# Find largest divisor
class Solution:
    def gcdOfStrings(self, str1: str, str2: str) -> str:
        # Iterate from the largest possible divisor length to 1
        for i in range(min(len(str1), len(str2)), 0, -1):
            # Check if i is a valid divisor length for both strings
            if len(str1) % i == 0 and len(str2) % i == 0:
                # Get the candidate divisor string
                candidate = str1[:i]
                # Check if repeating the candidate forms both str1 and str2
                if candidate * (len(str1) // i) == str1 and candidate * (len(str2) // i) == str2:
                    return candidate
        # If no divisor found, return an empty string
        return ""

# Example usage:
str1 = "ABCABC"
str2 = "ABC"
solution = Solution()
print(solution.gcdOfStrings(str1, str2))  # Output: "ABC"
